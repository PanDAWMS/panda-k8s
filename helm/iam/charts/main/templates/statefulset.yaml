{{- if .Values.persistentvolume.create -}}
# pv
kind: PersistentVolume
apiVersion: v1
metadata:
  name: {{ include "main.fullname" . }}
  labels:
      {{- include "main.labels" . | nindent 4 }}
spec:
  storageClassName: {{ .Values.persistentvolume.class }}
  capacity:
    storage: {{ .Values.persistentvolume.size }}
  accessModes:
    - ReadWriteMany
  hostPath:
    path: {{ .Values.persistentvolume.path }}
---
{{- end }}
# pv claim
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: {{ include "main.fullname" . }}
  labels:
    {{- include "main.labels" . | nindent 4 }}
spec:
  storageClassName: {{ .Values.persistentvolume.class }}
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: {{ .Values.persistentvolume.size }}
  {{- if .Values.persistentvolume.create }}
  selector:
    matchLabels:
      {{- include "main.selectorLabels" . | nindent 6 }}
  {{- end }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "main.fullname" . }}
  labels:
    {{- include "main.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "main.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "main.selectorLabels" . | nindent 8 }}
    spec:
      hostname:  {{ .Release.Name}}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "main.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.container.port }}
              protocol: TCP
          envFrom:
            - secretRef:
                name: {{ .Values.global.secret }}-iam-envs
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
              - name: {{ include "main.fullname" . }}-configmap
                mountPath: /indigo-iam/config/
              - name: {{ include "main.fullname" . }}-certs
                mountPath: /indigo-iam/certs/
          # readinessProbe:
          #   httpGet:
          #     path: /actuator/health
          #     port: {{ .Values.container.port }}
          #   initialDelaySeconds: 90
          #   timeoutSeconds: 10
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      volumes:
        - name: {{ include "main.fullname" . }}-configmap
          secret:
            secretName: {{ .Values.global.secret }}-iam-conf
        - name: {{ include "main.fullname" . }}-certs
          secret:
            secretName: {{ .Values.global.secret }}-iam-certs
